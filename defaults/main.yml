---
# server setting
drone_server_enable: "false"
drone_server_container_name: "drone-server"
drone_runner_enable: "true"
drone_version: "latest"
drone_runner_version: "1.6.3"
drone_logs_pretty: "true"
drone_logs_color: "true"
drone_rpc_server: "http://drone-server"
drone_runner_container_name: "drone-runner-docker"
drone_runner_capacity: "3"
drone_host_port: "8080"

# github setting
drone_github_server: "https://github.com"
drone_github_client_id: ""
drone_github_client_secret: ""
drone_github_debug: "false"

# gitlab setting
drone_gitlab_server: "https://gitlab.com"
drone_gitlab_client_id: ""
drone_gitlab_client_secret: ""
drone_gitlab_skip_verify: "false"
drone_gitlab_debug: "false"

# gitea setting
drone_gitea_server: ""
drone_gitea_client_id: ""
drone_gitea_client_secret: ""
drone_gitea_skip_verify: "false"
drone_gitea_debug: "false"

# database setting
drone_database_driver: "sqlite"
drone_sqlite_dir: "/var/lib/drone"
drone_sqlite_host_data_dir: "/data"
drone_postgres_data_dir: "/var/lib/postgresql/data"
drone_postgres_password: "drone"
drone_postgres_user: "drone"
drone_postgres_db: "drone"
drone_mysql_data_dir: "/var/lib/mysql/data"
drone_mysql_host_data_dir: "/data"
drone_mysql_password: "drone"
drone_mysql_user: "drone"
drone_mysql_db: "drone"

# Run parameter locations
drone_enable_systemd: "false"

# S3 Storage
aws_default_region: "us-east-1"
aws_region: "us-east-1"
drone_s3_bucket: ""
aws_access_key_id: ""
aws_secret_access_key: ""

# Kubernetes
drone_kubernetes_enabled: False
drone_kubernetes_namespace: ""
drone_kubernetes_config_path: ""
drone_kubernetes_config_url: ""
drone_kubernetes_ttl_after_finished: "300"
drone_kubernetes_service_account: ""
drone_kubernetes_image_pull: "Always"
drone_kubernetes_image: ""

# default volumes to mount
drone_default_server_volumes_to_mount:
  - /var/run/docker.sock:/var/run/docker.sock

# default for certs
drone_install_certs: false
drone_certs_from_vault: false
drone_certs_host_mount_path: "/etc/certs/"
drone_cert_key_name: "drone.key"
drone_cert_name: "drone.crt"

# defaults for user of drone process
drone_docker_owner: drone
drone_docker_groups: "docker"

# defaults for drone-vault
drone_vault_version: 1.2
drone_plugin_vault_container_name: "drone-plugin-vault"

#
# Drone network
#
drone_network_name: "drone_network"

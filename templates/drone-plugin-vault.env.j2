{% if drone_logs_debug is defined %}
DRONE_LOGS_DEBUG=true
{% endif %}
DRONE_SECRET={{ drone_secret_plugin}}

{% if drone_plugin_vault_secrets_from_env is defined and drone_plugin_vault_secrets_from_env is sameas true %}
VAULT_ADDR={{ lookup('env', 'ANSIBLE_HASHI_VAULT_ADDR') }}
VAULT_NAMESPACE={{ lookup('env', 'ANSIBLE_HASHI_VAULT_NAMESPACE') }}
VAULT_AUTH_TYPE=approle
VAULT_TOKEN_TTL=72h
VAULT_TOKEN_RENEWAL=24h
VAULT_APPROLE_ID={{ lookup('env', 'ANSIBLE_HASHI_VAULT_ROLE_ID') }}
VAULT_APPROLE_SECRET={{ lookup('env', 'ANSIBLE_HASHI_VAULT_SECRET_ID') }}
{% else %}

VAULT_ADDR={{ drone_vault_addr}}
VAULT_NAMESPACE={{ drone_vault_namespace}}
VAULT_AUTH_TYPE=approle
VAULT_TOKEN_TTL=72h
VAULT_TOKEN_RENEWAL=24h
VAULT_APPROLE_ID={{ drone_vault_role_id }}
VAULT_APPROLE_SECRET={{ drone_vault_secret_id}}
{% endif %}

#
# We need to expose this vault plugin  to the reverse proxy, but market it as internal only
#
{% if drone_runner_virtual_hosting is defined %}
NETWORK_ACCESS=internal
VIRTUAL_HOST={{ drone_plugin_vault_container_name }}.{{domain_name}}
VIRTUAL_PORT=3000
VIRTUAL_PROTOCOL=http
{% endif %}
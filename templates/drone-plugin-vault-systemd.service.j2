[Unit]
Description=Drone plugin vault running in docker container
# Start this unit only after docker has started
After=docker.service
Requires=docker.service

[Service]
TimeoutStartSec=0
Restart=always
# The following lines start with '-' because they are allowed to fail without
# causing startup to fail.
#
#User = {{ drone_docker_owner }}
#Group = {{ drone_docker_owner }}
# Kill the old instance, if it's still running for some reason
ExecStartPre=-/usr/bin/docker stop {{ drone_plugin_vault_container_name }}
# Remove the old instance, if it stuck around
ExecStartPre=-/usr/bin/docker rm {{ drone_plugin_vault_container_name }}
ExecStart=/usr/bin/docker run   -t --name {{ drone_plugin_vault_container_name }} \
{% if drone_default_server_volumes_to_mount is defined -%}
  {%- for mounts in  drone_default_server_volumes_to_mount %}
   -v {{ mounts }} \
  {% endfor %}
{% endif -%}
  --env-file /etc/drone/drone-plugin-vault.env \
  --restart=always        \
  -p {{drone_vault_plugin_host_port}}:3000                 \
  drone/vault:{{ drone_vault_version }}



# On exit, stop the container
ExecStop=/usr/bin/docker stop {{ drone_plugin_vault_container_name }}
ExecStop=-/usr/bin/docker rm {{ drone_plugin_vault_container_name }}
[Install]
WantedBy=multi-user.target
